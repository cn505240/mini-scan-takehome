version: '3'
services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: scans
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:316.0.0-emulators
    ports:
      - "8085:8085"
    entrypoint: gcloud beta emulators pubsub start --project test-project --host-port 0.0.0.0:8085
    healthcheck:
      test: ["CMD", "curl", "-f", "http://pubsub:8085"]
      interval: 5s
      timeout: 10s
      retries: 3

  mk-topic:
    image: alpine/httpie
    depends_on:
      pubsub:
        condition: service_healthy
    command: PUT http://pubsub:8085/v1/projects/test-project/topics/scan-topic

  mk-subscription:
    image: alpine/httpie
    depends_on:
      mk-topic:
        condition: service_completed_successfully
    command: PUT http://pubsub:8085/v1/projects/test-project/subscriptions/scan-sub topic=projects/test-project/topics/scan-topic --ignore-stdin 

  scanner:
    depends_on:
      mk-topic:
        condition: service_completed_successfully
    environment:
      PUBSUB_EMULATOR_HOST: pubsub:8085
      PUBSUB_PROJECT_ID: test-project
    build:
      context: .
      dockerfile: ./cmd/scanner/Dockerfile

  migrate:
    image: postgres:15
    depends_on:
      postgres:
        condition: service_started
    environment:
      PGPASSWORD: postgres
    command: >
      sh -c "
        until pg_isready -h postgres -p 5432 -U postgres; do
          echo 'Waiting for postgres...'
          sleep 2
        done
        psql -h postgres -p 5432 -U postgres -d scans -f /migrations/001_create_service_records.sql
        echo 'Migrations completed'
      "
    volumes:
      - ./internal/db/migrations:/migrations

  consumer:
    depends_on:
      migrate:
        condition: service_completed_successfully
      mk-subscription:
        condition: service_completed_successfully
    environment:
      PUBSUB_EMULATOR_HOST: pubsub:8085
      PUBSUB_PROJECT_ID: test-project
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: scans
      DB_USER: postgres
      DB_PASSWORD: postgres
    build:
      context: .
      dockerfile: ./cmd/consumer/Dockerfile

volumes:
  postgres_data:
